import React, { useEffect } from 'react';
import { motion } from 'framer-motion';
import { 
  FileText, 
  Scale, 
  AlertTriangle, 
  Users, 
  Shield, 
  ArrowLeft,
  Calendar,
  CheckCircle,
  XCircle,
  Info,
  Search,
  Lock
} from 'lucide-react';
import { Link } from 'react-router-dom';

/**
 * Terms of Service Page Component - Prompt Sherlock
 * 
 * Features:
 * - Professional legal-style formatting
 * - Service usage terms and conditions
 * - Acceptable use policy
 * - Limitation of liability
 * - Mobile-responsive design
 * - Glass morphism styling
 * - Updated branding for Prompt Sherlock
 */
const Terms = () => {

  useEffect(() => {
    window.scrollTo(0, 0);
  }, []);
  
  // =============================================================================
  // ANIMATION VARIANTS
  // =============================================================================
  
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        duration: 0.6,
        staggerChildren: 0.1
      }
    }
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.5,
        ease: 'easeOut'
      }
    }
  };

  const headerVariants = {
    hidden: { opacity: 0, y: -30 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.8,
        ease: 'easeOut'
      }
    }
  };

  // =============================================================================
  // TERMS SECTIONS DATA - Updated for Prompt Sherlock
  // =============================================================================

  const termsSections = [
    {
      id: 'service-description',
      icon: FileText,
      title: '1. Service Description',
      content: [
        {
          subtitle: '1.1 Service Overview',
          text: 'Prompt Sherlock ("the Service") is an AI-powered creative tool that analyzes uploaded images to generate custom prompts for AI art generation platforms. The Service uses advanced computer vision technology to investigate visual elements and create tailored prompts for tools like Midjourney, DALLÂ·E, Stable Diffusion, and Gemini Imagen.'
        },
        {
          subtitle: '1.2 Service Availability',
          text: 'We strive to maintain high availability of the Service but do not guarantee uninterrupted access. The Service may be temporarily unavailable due to maintenance, updates, or circumstances beyond our control.'
        },
        {
          subtitle: '1.3 Service Modifications',
          text: 'We reserve the right to modify, update, or discontinue the Service at any time with or without notice. We will make reasonable efforts to notify users of significant changes that affect service functionality.'
        }
      ]
    },
    {
      id: 'acceptable-use',
      icon: Users,
      title: '2. Acceptable Use Policy',
      content: [
        {
          subtitle: '2.1 Permitted Uses',
          text: 'You may use Prompt Sherlock for lawful purposes including: analyzing personal images, business image content, educational research, creative projects, and generating prompts for AI art creation. Commercial use is permitted within reasonable limits.'
        },
        {
          subtitle: '2.2 Prohibited Uses',
          text: 'You may not use the Service to: upload illegal, harmful, offensive, or copyrighted content without permission; attempt to reverse engineer or compromise the Service; violate any applicable laws or regulations; or use the Service for automated bulk processing beyond reasonable personal or business use.'
        },
        {
          subtitle: '2.3 Content Standards',
          text: 'All uploaded images must comply with legal standards and must not contain: explicit sexual content, violence, hate speech, illegal activities, or content that violates third-party rights. We reserve the right to refuse processing of any content.'
        }
      ]
    },
    {
      id: 'intellectual-property',
      icon: Shield,
      title: '3. Intellectual Property',
      content: [
        {
          subtitle: '3.1 Your Content',
          text: 'You retain all rights to the images you upload to Prompt Sherlock. By using the Service, you grant us a temporary license to process your images solely for the purpose of generating prompts, after which all content is immediately deleted.'
        },
        {
          subtitle: '3.2 Generated Prompts',
          text: 'The prompts generated by our Service are provided to you for your use. You own the generated prompts and may use them for any lawful purpose, including commercial applications.'
        },
        {
          subtitle: '3.3 Service Technology',
          text: 'The Prompt Sherlock platform, including its AI technology, algorithms, and user interface, remains our intellectual property. You may not copy, modify, or create derivative works of the Service.'
        }
      ]
    },
    {
      id: 'privacy-data',
      icon: Lock,
      title: '4. Privacy and Data Handling',
      content: [
        {
          subtitle: '4.1 Immediate Deletion',
          text: 'All uploaded images are automatically and permanently deleted from our servers immediately upon completion of the prompt generation process. We do not retain any user content.'
        },
        {
          subtitle: '4.2 No Personal Data Collection',
          text: 'Prompt Sherlock operates on a completely anonymous basis. We do not collect, store, or process personal information, user accounts, or tracking data.'
        },
        {
          subtitle: '4.3 Privacy Policy',
          text: 'Our comprehensive privacy practices are detailed in our Privacy Policy, which forms an integral part of these Terms of Service.'
        }
      ]
    },
    {
      id: 'limitation-liability',
      icon: AlertTriangle,
      title: '5. Limitation of Liability',
      content: [
        {
          subtitle: '5.1 Service Disclaimer',
          text: 'Prompt Sherlock is provided "as is" without warranties of any kind. We do not guarantee the accuracy, completeness, or usefulness of generated prompts, nor do we warrant that the Service will be error-free or uninterrupted.'
        },
        {
          subtitle: '5.2 Limitation of Damages',
          text: 'To the maximum extent permitted by law, we shall not be liable for any indirect, incidental, special, consequential, or punitive damages, including but not limited to loss of profits, data, or business opportunities.'
        },
        {
          subtitle: '5.3 Maximum Liability',
          text: 'Our total liability for any claims arising from your use of Prompt Sherlock shall not exceed the amount paid by you for the Service in the twelve months preceding the claim, or $100, whichever is less.'
        }
      ]
    },
    {
      id: 'termination',
      icon: XCircle,
      title: '6. Termination',
      content: [
        {
          subtitle: '6.1 Termination Rights',
          text: 'Either party may terminate access to the Service at any time. We may suspend or terminate your access immediately if you violate these Terms or engage in prohibited activities.'
        },
        {
          subtitle: '6.2 Effect of Termination',
          text: 'Upon termination, your right to use the Service ceases immediately. Since we do not store user data, termination does not affect previously downloaded prompt results.'
        },
        {
          subtitle: '6.3 Survival',
          text: 'Sections relating to intellectual property, limitation of liability, and dispute resolution survive termination of these Terms.'
        }
      ]
    }
  ];

  const importantNotices = [
    {
      icon: AlertTriangle,
      title: 'Legal Compliance',
      description: 'Users must comply with all applicable laws and regulations',
      type: 'warning'
    },
    {
      icon: Shield,
      title: 'Privacy Protection',
      description: 'Images are processed securely and deleted immediately',
      type: 'success'
    },
    {
      icon: Info,
      title: 'Fair Use',
      description: 'Service is provided for reasonable personal and commercial use',
      type: 'info'
    }
  ];

  // =============================================================================
  // RENDER HELPERS
  // =============================================================================

  const renderHeader = () => (
    <motion.div
      className="text-center mb-12"
      variants={headerVariants}
      initial="hidden"
      animate="visible"
    >
      {/* Back Navigation */}
      <div className="flex justify-start mb-8">
        <Link 
          to="/"
          className="flex items-center space-x-2 text-blue-400 hover:text-blue-300 transition-colors group"
        >
          <ArrowLeft className="w-5 h-5 group-hover:-translate-x-1 transition-transform" />
          <span>Back to Home</span>
        </Link>
      </div>

      {/* Header Content */}
      <div className="glass-effect p-8 rounded-2xl">
        <div className="flex items-center justify-center mb-6">
          <motion.div
            className="p-4 bg-gradient-to-r from-blue-500/20 to-purple-500/20 rounded-full mr-4"
            whileHover={{ scale: 1.1, rotate: 5 }}
            transition={{ duration: 0.3 }}
          >
            <Scale className="w-10 h-10 text-blue-400" />
          </motion.div>
          <div className="text-left">
            <h1 className="gradient-text text-4xl md:text-5xl font-bold">
              Terms of Service
            </h1>
          </div>
        </div>
        
        <p className="text-blue-200 text-lg md:text-xl max-w-3xl mx-auto mb-6">
          Legal terms and conditions governing your use of Prompt Sherlock services.
        </p>
        
        {/* ADDED: Trademark Disclaimer */}
        <motion.div
          className="bg-slate-800/30 border border-slate-600/50 rounded-lg p-4 mb-6 max-w-4xl mx-auto"
          initial={{ opacity: 0, y: 10 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.5, duration: 0.5 }}
        >
          <p className="text-gray-400 text-xs leading-relaxed">
            <strong className="text-gray-300">Disclaimer:</strong> All product names, logos, and brands are property of their respective owners. Prompt Sherlock is not affiliated with or endorsed by Midjourney, OpenAI (DALLÂ·E), Stability AI (Stable Diffusion), Google (Gemini Imagen), or any other mentioned entities. All company, product, and service names used in this website are for identification purposes only.
          </p>
        </motion.div>
        
        <div className="flex items-center justify-center space-x-2 text-gray-400 text-sm">
          <Calendar className="w-4 h-4" />
          <span>Last updated: {new Date().toLocaleDateString()}</span>
        </div>
      </div>
    </motion.div>
  );

  const renderImportantNotices = () => (
    <motion.div
      className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-12"
      variants={containerVariants}
    >
      {importantNotices.map((notice, index) => (
        <motion.div
          key={notice.title}
          className="glass-effect p-6 rounded-xl text-center hover:bg-white/15 transition-all duration-300"
          variants={itemVariants}
          whileHover={{ scale: 1.05 }}
        >
          <motion.div
            className={`p-3 rounded-full w-fit mx-auto mb-4 bg-gradient-to-r ${
              notice.type === 'warning' ? 'from-yellow-500/20 to-orange-500/20' :
              notice.type === 'success' ? 'from-green-500/20 to-blue-500/20' :
              'from-blue-500/20 to-purple-500/20'
            }`}
            whileHover={{ rotate: 360 }}
            transition={{ duration: 0.6 }}
          >
            <notice.icon className={`w-6 h-6 ${
              notice.type === 'warning' ? 'text-yellow-400' :
              notice.type === 'success' ? 'text-green-400' :
              'text-blue-400'
            }`} />
          </motion.div>
          <h3 className="text-white font-semibold text-lg mb-2">
            {notice.title}
          </h3>
          <p className="text-gray-300 text-sm">
            {notice.description}
          </p>
        </motion.div>
      ))}
    </motion.div>
  );

  const renderTermsSections = () => (
    <motion.div
      className="space-y-8"
      variants={containerVariants}
    >
      {termsSections.map((section, index) => (
        <motion.section
          key={section.id}
          className="glass-effect p-8 rounded-xl"
          variants={itemVariants}
          id={section.id}
        >
          <div className="flex items-start space-x-4 mb-6">
            <motion.div
              className="p-3 bg-gradient-to-r from-blue-500/20 to-purple-500/20 rounded-full flex-shrink-0"
              whileHover={{ scale: 1.1 }}
              transition={{ duration: 0.2 }}
            >
              <section.icon className="w-6 h-6 text-blue-400" />
            </motion.div>
            <div>
              <h2 className="text-2xl font-bold text-white mb-2">
                {section.title}
              </h2>
            </div>
          </div>

          <div className="space-y-6 ml-16">
            {section.content.map((item, itemIndex) => (
              <motion.div
                key={itemIndex}
                className="border-l-2 border-blue-500/30 pl-6"
                initial={{ opacity: 0, x: -20 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ delay: index * 0.1 + itemIndex * 0.05 }}
              >
                <h3 className="text-lg font-semibold text-blue-300 mb-3 font-mono">
                  {item.subtitle}
                </h3>
                <p className="text-gray-300 leading-relaxed">
                  {item.text}
                </p>
              </motion.div>
            ))}
          </div>
        </motion.section>
      ))}
    </motion.div>
  );

  const renderAdditionalInfo = () => (
    <motion.div
      className="grid grid-cols-1 md:grid-cols-2 gap-8 mt-12"
      variants={containerVariants}
    >
      {/* Governing Law */}
      <motion.div
        className="glass-effect p-6 rounded-xl"
        variants={itemVariants}
      >
        <h3 className="text-xl font-semibold text-white mb-4 flex items-center">
          <Scale className="w-5 h-5 mr-2 text-blue-400" />
          Governing Law
        </h3>
        <div className="space-y-3 text-gray-300">
          <p>
            These Terms are governed by and construed in accordance with applicable laws.
          </p>
          <div className="space-y-2 text-sm">
            <p>â¢ Disputes will be resolved through binding arbitration</p>
            <p>â¢ Class action lawsuits are waived</p>
            <p>â¢ Jurisdiction determined by user location</p>
          </div>
        </div>
      </motion.div>

      {/* Contact Information */}
      <motion.div
        className="glass-effect p-6 rounded-xl"
        variants={itemVariants}
      >
        <h3 className="text-xl font-semibold text-white mb-4 flex items-center">
          <Info className="w-5 h-5 mr-2 text-purple-400" />
          Contact & Support
        </h3>
        <div className="space-y-3 text-gray-300">
          <p>
            Questions about these Terms? We're here to help clarify any concerns.
          </p>
          <div className="space-y-2 text-sm">
            <p>â¢ Legal inquiries handled within 72 hours</p>
            <p>â¢ Support available for service issues</p>
            <p>â¢ Feedback welcomed on terms and policies</p>
          </div>
        </div>
      </motion.div>
    </motion.div>
  );

  // =============================================================================
  // MAIN RENDER
  // =============================================================================

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-blue-900 to-purple-900">
      <div className="container mx-auto px-4 py-8">
        <motion.div
          className="max-w-4xl mx-auto"
          variants={containerVariants}
          initial="hidden"
          animate="visible"
        >
          {/* Header */}
          {renderHeader()}

          {/* Important Notices */}
          {renderImportantNotices()}

          {/* Main Terms Sections */}
          {renderTermsSections()}

          {/* Additional Information */}
          {renderAdditionalInfo()}

          {/* Bottom Navigation */}
          <motion.div
            className="mt-12 pt-8 border-t border-white/10 text-center"
            variants={itemVariants}
          >
            <div className="space-y-4">
              <p className="text-gray-400">
                Learn more about our privacy practices and data protection
              </p>
              <div className="flex justify-center space-x-4">
                <Link 
                  to="/privacy"
                  className="text-blue-400 hover:text-blue-300 transition-colors"
                >
                  Privacy Policy â
                </Link>
                <Link 
                  to="/"
                  className="text-purple-400 hover:text-purple-300 transition-colors"
                >
                  â Back to Home
                </Link>
              </div>
            </div>
          </motion.div>
        </motion.div>
      </div>
    </div>
  );
};

export default Terms;